{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1_NvofZ2XrFHk_9-In_wecEbIb9u5-3At","authorship_tag":"ABX9TyOjL8HY1dk6sAF5xcp5q2O0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RetqtOklBceE","executionInfo":{"status":"ok","timestamp":1691464475835,"user_tz":-540,"elapsed":10022,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"01c73b7a-510f-48c2-c836-8613c1e09985"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["### Library Import"],"metadata":{"id":"D0ID0dPwEf6o"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import statsmodels.api as sm\n","import statsmodels.formula.api as smf\n","from statsmodels.stats.diagnostic import het_breuschpagan\n","from statsmodels.stats.diagnostic import het_white"],"metadata":{"id":"-8EsRW5NCLIT","executionInfo":{"status":"ok","timestamp":1691464480827,"user_tz":-540,"elapsed":4995,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["### Data Load"],"metadata":{"id":"VPB13gJuEjB9"}},{"cell_type":"code","source":["city_data = pd.read_csv('/content/drive/MyDrive/SSK_한국연구재단(2023)/(소논문)온실가스 데이터와 연계한 지역간 제조업 자원배분 효율성 분석/data/manu_city_data.csv')\n","city_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"YN4CXWPbCX-6","executionInfo":{"status":"ok","timestamp":1691464486756,"user_tz":-540,"elapsed":5934,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"1bf36dbb-1412-47ae-ea72-911c32bd23e2"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            id  year  c_city  city_id c1  c2  c3   byear  empl_p  empl_p_m  \\\n","0            1  1999      11        1  C  10   9  1966.0     NaN       NaN   \n","1            2  1999      11        1  C  10   9  1972.0     NaN       NaN   \n","2            3  1999      11        1  C  10   9  1984.0     NaN       NaN   \n","3            4  1999      11        1  C  10   9  1997.0     NaN       NaN   \n","4            5  1999      11        1  D  15   0  1956.0     NaN       NaN   \n","...        ...   ...     ...      ... ..  ..  ..     ...     ...       ...   \n","608691  608692  2019      26        7  C  34   9  2016.0    35.0      33.0   \n","608692  608693  2019      26        7  C  34   9  2018.0    75.0      74.0   \n","608693  608694  2019      26        7  C  34   9  2018.0    59.0      57.0   \n","608694  608695  2019      26        7  C  34   9  2019.0    40.0      40.0   \n","608695  608696  2019      26        7  C  34   9  2015.0    18.0      17.0   \n","\n","        ...   pay3  cost_rent  fasset_b  fasset_e  invt_fuel_b  invt_fuel_e  \\\n","0       ...  142.0       71.0    2253.0    2214.0          0.0          0.0   \n","1       ...  101.0        0.0   58722.0   58713.0         22.0         15.0   \n","2       ...   35.0      222.0     306.0     295.0          0.0          0.0   \n","3       ...   15.0      160.0     199.0     137.0          0.0          0.0   \n","4       ...  450.0        0.0   35556.0   34573.0          0.0          0.0   \n","...     ...    ...        ...       ...       ...          ...          ...   \n","608691  ...  114.0        NaN      34.0      24.0          NaN          NaN   \n","608692  ...  123.0       65.0      32.0      30.0          NaN          NaN   \n","608693  ...  376.0       63.0      39.0      38.0          NaN          NaN   \n","608694  ...   79.0       40.0       0.0       0.0          0.0          0.0   \n","608695  ...    6.0       22.0       NaN     351.0          NaN          NaN   \n","\n","        invt_interm_b  invt_interm_e   reve   vadd  \n","0              1937.0         1994.0   2679    413  \n","1               725.0          722.0   4223   2321  \n","2               736.0          561.0   3396   1807  \n","3                92.0         4198.0   4532   3890  \n","4               681.0          447.0  72606  48713  \n","...               ...            ...    ...    ...  \n","608691            NaN            NaN    658    658  \n","608692            NaN            NaN   4500   4077  \n","608693           41.0          154.0   9883   5795  \n","608694            0.0            0.0   1919   1335  \n","608695            NaN            NaN   1830   1769  \n","\n","[608696 rows x 39 columns]"],"text/html":["\n","\n","  <div id=\"df-f78c37c1-54a7-4794-852f-1abb644c3d3e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>city_id</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","      <th>byear</th>\n","      <th>empl_p</th>\n","      <th>empl_p_m</th>\n","      <th>...</th>\n","      <th>pay3</th>\n","      <th>cost_rent</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>invt_fuel_b</th>\n","      <th>invt_fuel_e</th>\n","      <th>invt_interm_b</th>\n","      <th>invt_interm_e</th>\n","      <th>reve</th>\n","      <th>vadd</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1999</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1966.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>142.0</td>\n","      <td>71.0</td>\n","      <td>2253.0</td>\n","      <td>2214.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1937.0</td>\n","      <td>1994.0</td>\n","      <td>2679</td>\n","      <td>413</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1999</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1972.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>101.0</td>\n","      <td>0.0</td>\n","      <td>58722.0</td>\n","      <td>58713.0</td>\n","      <td>22.0</td>\n","      <td>15.0</td>\n","      <td>725.0</td>\n","      <td>722.0</td>\n","      <td>4223</td>\n","      <td>2321</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1999</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1984.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>35.0</td>\n","      <td>222.0</td>\n","      <td>306.0</td>\n","      <td>295.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>736.0</td>\n","      <td>561.0</td>\n","      <td>3396</td>\n","      <td>1807</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1999</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1997.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>160.0</td>\n","      <td>199.0</td>\n","      <td>137.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>92.0</td>\n","      <td>4198.0</td>\n","      <td>4532</td>\n","      <td>3890</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1999</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>D</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1956.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>450.0</td>\n","      <td>0.0</td>\n","      <td>35556.0</td>\n","      <td>34573.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>447.0</td>\n","      <td>72606</td>\n","      <td>48713</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>608691</th>\n","      <td>608692</td>\n","      <td>2019</td>\n","      <td>26</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2016.0</td>\n","      <td>35.0</td>\n","      <td>33.0</td>\n","      <td>...</td>\n","      <td>114.0</td>\n","      <td>NaN</td>\n","      <td>34.0</td>\n","      <td>24.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>658</td>\n","      <td>658</td>\n","    </tr>\n","    <tr>\n","      <th>608692</th>\n","      <td>608693</td>\n","      <td>2019</td>\n","      <td>26</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2018.0</td>\n","      <td>75.0</td>\n","      <td>74.0</td>\n","      <td>...</td>\n","      <td>123.0</td>\n","      <td>65.0</td>\n","      <td>32.0</td>\n","      <td>30.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4500</td>\n","      <td>4077</td>\n","    </tr>\n","    <tr>\n","      <th>608693</th>\n","      <td>608694</td>\n","      <td>2019</td>\n","      <td>26</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2018.0</td>\n","      <td>59.0</td>\n","      <td>57.0</td>\n","      <td>...</td>\n","      <td>376.0</td>\n","      <td>63.0</td>\n","      <td>39.0</td>\n","      <td>38.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.0</td>\n","      <td>154.0</td>\n","      <td>9883</td>\n","      <td>5795</td>\n","    </tr>\n","    <tr>\n","      <th>608694</th>\n","      <td>608695</td>\n","      <td>2019</td>\n","      <td>26</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2019.0</td>\n","      <td>40.0</td>\n","      <td>40.0</td>\n","      <td>...</td>\n","      <td>79.0</td>\n","      <td>40.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1919</td>\n","      <td>1335</td>\n","    </tr>\n","    <tr>\n","      <th>608695</th>\n","      <td>608696</td>\n","      <td>2019</td>\n","      <td>26</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2015.0</td>\n","      <td>18.0</td>\n","      <td>17.0</td>\n","      <td>...</td>\n","      <td>6.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>351.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1830</td>\n","      <td>1769</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>608696 rows × 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f78c37c1-54a7-4794-852f-1abb644c3d3e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9cc89e65-ef31-480e-bfdc-8a9239093c19\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9cc89e65-ef31-480e-bfdc-8a9239093c19')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9cc89e65-ef31-480e-bfdc-8a9239093c19 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f78c37c1-54a7-4794-852f-1abb644c3d3e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f78c37c1-54a7-4794-852f-1abb644c3d3e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["city_data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"DYSQExIuR4P1","executionInfo":{"status":"ok","timestamp":1691464507320,"user_tz":-540,"elapsed":1621,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"4b658e08-316a-4472-d39f-c3b333f7ba1a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  id           year         c_city        city_id  \\\n","count  608696.000000  608696.000000  608696.000000  608696.000000   \n","mean   304348.500000    2006.361938      18.667377       2.698965   \n","std    175715.544065       5.849817       5.589076       1.686072   \n","min         1.000000    1999.000000      11.000000       1.000000   \n","25%    152174.750000    2002.000000      11.000000       1.000000   \n","50%    304348.500000    2005.000000      21.000000       2.000000   \n","75%    456522.250000    2011.000000      23.000000       4.000000   \n","max    608696.000000    2019.000000      26.000000       7.000000   \n","\n","                  c2             c3          byear         empl_p  \\\n","count  608696.000000  608696.000000  608616.000000  216963.000000   \n","mean       24.131082       3.014030    1996.351844      35.822292   \n","std         6.331869       2.907122      10.542211     262.339747   \n","min         7.000000       0.000000     982.000000       0.000000   \n","25%        18.000000       1.000000    1991.000000      11.000000   \n","50%        25.000000       2.000000    1998.000000      16.000000   \n","75%        29.000000       4.000000    2002.000000      30.000000   \n","max        37.000000       9.000000    2019.000000   29688.000000   \n","\n","            empl_p_m       empl_p_w  ...           pay3      cost_rent  \\\n","count  215888.000000  213679.000000  ...  608253.000000  601367.000000   \n","mean       26.947116       9.147146  ...     108.472206      41.376474   \n","std       251.337934      28.497415  ...    2217.164724     774.232493   \n","min         0.000000       0.000000  ...       0.000000       0.000000   \n","25%         7.000000       2.000000  ...       5.000000       0.000000   \n","50%        11.000000       4.000000  ...      18.000000       9.000000   \n","75%        21.000000       9.000000  ...      55.000000      24.000000   \n","max     29117.000000    2100.000000  ...  395576.000000  256975.000000   \n","\n","           fasset_b      fasset_e   invt_fuel_b   invt_fuel_e  invt_interm_b  \\\n","count  6.058380e+05  6.073840e+05  5.355020e+05  5.353400e+05   5.916590e+05   \n","mean   3.230606e+03  3.166857e+03  1.302904e+02  1.409533e+02   8.917806e+02   \n","std    6.229673e+04  6.113541e+04  5.564387e+03  5.888467e+03   2.091095e+04   \n","min    0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   0.000000e+00   \n","25%    3.500000e+01  3.700000e+01  0.000000e+00  0.000000e+00   0.000000e+00   \n","50%    1.660000e+02  1.680000e+02  0.000000e+00  0.000000e+00   1.500000e+01   \n","75%    9.860000e+02  9.930000e+02  3.000000e+00  3.000000e+00   1.360000e+02   \n","max    9.752178e+06  9.209200e+06  1.516892e+06  1.662941e+06   4.617119e+06   \n","\n","       invt_interm_e          reve          vadd  \n","count   5.916570e+05  6.086960e+05  6.086960e+05  \n","mean    9.554259e+02  9.756673e+03  3.055401e+03  \n","std     2.167276e+04  2.654771e+05  6.531381e+04  \n","min     0.000000e+00 -1.718000e+03 -1.098607e+06  \n","25%     0.000000e+00  3.600000e+02  1.900000e+02  \n","50%     1.900000e+01  1.029500e+03  4.790000e+02  \n","75%     1.660000e+02  3.073000e+03  1.284000e+03  \n","max     4.600525e+06  4.690521e+07  9.866608e+06  \n","\n","[8 rows x 38 columns]"],"text/html":["\n","\n","  <div id=\"df-cf43b7d5-7abe-4b3c-a69b-40d13a5055ab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>city_id</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","      <th>byear</th>\n","      <th>empl_p</th>\n","      <th>empl_p_m</th>\n","      <th>empl_p_w</th>\n","      <th>...</th>\n","      <th>pay3</th>\n","      <th>cost_rent</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>invt_fuel_b</th>\n","      <th>invt_fuel_e</th>\n","      <th>invt_interm_b</th>\n","      <th>invt_interm_e</th>\n","      <th>reve</th>\n","      <th>vadd</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>608696.000000</td>\n","      <td>608696.000000</td>\n","      <td>608696.000000</td>\n","      <td>608696.000000</td>\n","      <td>608696.000000</td>\n","      <td>608696.000000</td>\n","      <td>608616.000000</td>\n","      <td>216963.000000</td>\n","      <td>215888.000000</td>\n","      <td>213679.000000</td>\n","      <td>...</td>\n","      <td>608253.000000</td>\n","      <td>601367.000000</td>\n","      <td>6.058380e+05</td>\n","      <td>6.073840e+05</td>\n","      <td>5.355020e+05</td>\n","      <td>5.353400e+05</td>\n","      <td>5.916590e+05</td>\n","      <td>5.916570e+05</td>\n","      <td>6.086960e+05</td>\n","      <td>6.086960e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>304348.500000</td>\n","      <td>2006.361938</td>\n","      <td>18.667377</td>\n","      <td>2.698965</td>\n","      <td>24.131082</td>\n","      <td>3.014030</td>\n","      <td>1996.351844</td>\n","      <td>35.822292</td>\n","      <td>26.947116</td>\n","      <td>9.147146</td>\n","      <td>...</td>\n","      <td>108.472206</td>\n","      <td>41.376474</td>\n","      <td>3.230606e+03</td>\n","      <td>3.166857e+03</td>\n","      <td>1.302904e+02</td>\n","      <td>1.409533e+02</td>\n","      <td>8.917806e+02</td>\n","      <td>9.554259e+02</td>\n","      <td>9.756673e+03</td>\n","      <td>3.055401e+03</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>175715.544065</td>\n","      <td>5.849817</td>\n","      <td>5.589076</td>\n","      <td>1.686072</td>\n","      <td>6.331869</td>\n","      <td>2.907122</td>\n","      <td>10.542211</td>\n","      <td>262.339747</td>\n","      <td>251.337934</td>\n","      <td>28.497415</td>\n","      <td>...</td>\n","      <td>2217.164724</td>\n","      <td>774.232493</td>\n","      <td>6.229673e+04</td>\n","      <td>6.113541e+04</td>\n","      <td>5.564387e+03</td>\n","      <td>5.888467e+03</td>\n","      <td>2.091095e+04</td>\n","      <td>2.167276e+04</td>\n","      <td>2.654771e+05</td>\n","      <td>6.531381e+04</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1999.000000</td>\n","      <td>11.000000</td>\n","      <td>1.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>982.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>-1.718000e+03</td>\n","      <td>-1.098607e+06</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>152174.750000</td>\n","      <td>2002.000000</td>\n","      <td>11.000000</td>\n","      <td>1.000000</td>\n","      <td>18.000000</td>\n","      <td>1.000000</td>\n","      <td>1991.000000</td>\n","      <td>11.000000</td>\n","      <td>7.000000</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>5.000000</td>\n","      <td>0.000000</td>\n","      <td>3.500000e+01</td>\n","      <td>3.700000e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>3.600000e+02</td>\n","      <td>1.900000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>304348.500000</td>\n","      <td>2005.000000</td>\n","      <td>21.000000</td>\n","      <td>2.000000</td>\n","      <td>25.000000</td>\n","      <td>2.000000</td>\n","      <td>1998.000000</td>\n","      <td>16.000000</td>\n","      <td>11.000000</td>\n","      <td>4.000000</td>\n","      <td>...</td>\n","      <td>18.000000</td>\n","      <td>9.000000</td>\n","      <td>1.660000e+02</td>\n","      <td>1.680000e+02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>1.500000e+01</td>\n","      <td>1.900000e+01</td>\n","      <td>1.029500e+03</td>\n","      <td>4.790000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>456522.250000</td>\n","      <td>2011.000000</td>\n","      <td>23.000000</td>\n","      <td>4.000000</td>\n","      <td>29.000000</td>\n","      <td>4.000000</td>\n","      <td>2002.000000</td>\n","      <td>30.000000</td>\n","      <td>21.000000</td>\n","      <td>9.000000</td>\n","      <td>...</td>\n","      <td>55.000000</td>\n","      <td>24.000000</td>\n","      <td>9.860000e+02</td>\n","      <td>9.930000e+02</td>\n","      <td>3.000000e+00</td>\n","      <td>3.000000e+00</td>\n","      <td>1.360000e+02</td>\n","      <td>1.660000e+02</td>\n","      <td>3.073000e+03</td>\n","      <td>1.284000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>608696.000000</td>\n","      <td>2019.000000</td>\n","      <td>26.000000</td>\n","      <td>7.000000</td>\n","      <td>37.000000</td>\n","      <td>9.000000</td>\n","      <td>2019.000000</td>\n","      <td>29688.000000</td>\n","      <td>29117.000000</td>\n","      <td>2100.000000</td>\n","      <td>...</td>\n","      <td>395576.000000</td>\n","      <td>256975.000000</td>\n","      <td>9.752178e+06</td>\n","      <td>9.209200e+06</td>\n","      <td>1.516892e+06</td>\n","      <td>1.662941e+06</td>\n","      <td>4.617119e+06</td>\n","      <td>4.600525e+06</td>\n","      <td>4.690521e+07</td>\n","      <td>9.866608e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 38 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf43b7d5-7abe-4b3c-a69b-40d13a5055ab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2ab11cea-b884-4ade-b2ea-6ebef92808fe\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ab11cea-b884-4ade-b2ea-6ebef92808fe')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2ab11cea-b884-4ade-b2ea-6ebef92808fe button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf43b7d5-7abe-4b3c-a69b-40d13a5055ab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf43b7d5-7abe-4b3c-a69b-40d13a5055ab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["city_mapping = {11:'서울',\n","                21:'부산',\n","                22:'대구',\n","                23:'인천',\n","                24:'광주',\n","                25:'대전',\n","                26:'울산'}\n","city_data['c_city'].replace(city_mapping, inplace=True)\n","city_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"BgIaNdmeOigf","executionInfo":{"status":"ok","timestamp":1691464509200,"user_tz":-540,"elapsed":325,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"3f2ae5d3-f814-4d74-80a7-6e493425ec50"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            id  year c_city  city_id c1  c2  c3   byear  empl_p  empl_p_m  \\\n","0            1  1999     서울        1  C  10   9  1966.0     NaN       NaN   \n","1            2  1999     서울        1  C  10   9  1972.0     NaN       NaN   \n","2            3  1999     서울        1  C  10   9  1984.0     NaN       NaN   \n","3            4  1999     서울        1  C  10   9  1997.0     NaN       NaN   \n","4            5  1999     서울        1  D  15   0  1956.0     NaN       NaN   \n","...        ...   ...    ...      ... ..  ..  ..     ...     ...       ...   \n","608691  608692  2019     울산        7  C  34   9  2016.0    35.0      33.0   \n","608692  608693  2019     울산        7  C  34   9  2018.0    75.0      74.0   \n","608693  608694  2019     울산        7  C  34   9  2018.0    59.0      57.0   \n","608694  608695  2019     울산        7  C  34   9  2019.0    40.0      40.0   \n","608695  608696  2019     울산        7  C  34   9  2015.0    18.0      17.0   \n","\n","        ...   pay3  cost_rent  fasset_b  fasset_e  invt_fuel_b  invt_fuel_e  \\\n","0       ...  142.0       71.0    2253.0    2214.0          0.0          0.0   \n","1       ...  101.0        0.0   58722.0   58713.0         22.0         15.0   \n","2       ...   35.0      222.0     306.0     295.0          0.0          0.0   \n","3       ...   15.0      160.0     199.0     137.0          0.0          0.0   \n","4       ...  450.0        0.0   35556.0   34573.0          0.0          0.0   \n","...     ...    ...        ...       ...       ...          ...          ...   \n","608691  ...  114.0        NaN      34.0      24.0          NaN          NaN   \n","608692  ...  123.0       65.0      32.0      30.0          NaN          NaN   \n","608693  ...  376.0       63.0      39.0      38.0          NaN          NaN   \n","608694  ...   79.0       40.0       0.0       0.0          0.0          0.0   \n","608695  ...    6.0       22.0       NaN     351.0          NaN          NaN   \n","\n","        invt_interm_b  invt_interm_e   reve   vadd  \n","0              1937.0         1994.0   2679    413  \n","1               725.0          722.0   4223   2321  \n","2               736.0          561.0   3396   1807  \n","3                92.0         4198.0   4532   3890  \n","4               681.0          447.0  72606  48713  \n","...               ...            ...    ...    ...  \n","608691            NaN            NaN    658    658  \n","608692            NaN            NaN   4500   4077  \n","608693           41.0          154.0   9883   5795  \n","608694            0.0            0.0   1919   1335  \n","608695            NaN            NaN   1830   1769  \n","\n","[608696 rows x 39 columns]"],"text/html":["\n","\n","  <div id=\"df-15d31430-3f18-4e35-85d0-aa702d61111d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>city_id</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","      <th>byear</th>\n","      <th>empl_p</th>\n","      <th>empl_p_m</th>\n","      <th>...</th>\n","      <th>pay3</th>\n","      <th>cost_rent</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>invt_fuel_b</th>\n","      <th>invt_fuel_e</th>\n","      <th>invt_interm_b</th>\n","      <th>invt_interm_e</th>\n","      <th>reve</th>\n","      <th>vadd</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1966.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>142.0</td>\n","      <td>71.0</td>\n","      <td>2253.0</td>\n","      <td>2214.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1937.0</td>\n","      <td>1994.0</td>\n","      <td>2679</td>\n","      <td>413</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1972.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>101.0</td>\n","      <td>0.0</td>\n","      <td>58722.0</td>\n","      <td>58713.0</td>\n","      <td>22.0</td>\n","      <td>15.0</td>\n","      <td>725.0</td>\n","      <td>722.0</td>\n","      <td>4223</td>\n","      <td>2321</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1984.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>35.0</td>\n","      <td>222.0</td>\n","      <td>306.0</td>\n","      <td>295.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>736.0</td>\n","      <td>561.0</td>\n","      <td>3396</td>\n","      <td>1807</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>1997.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>15.0</td>\n","      <td>160.0</td>\n","      <td>199.0</td>\n","      <td>137.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>92.0</td>\n","      <td>4198.0</td>\n","      <td>4532</td>\n","      <td>3890</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>D</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1956.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>450.0</td>\n","      <td>0.0</td>\n","      <td>35556.0</td>\n","      <td>34573.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>447.0</td>\n","      <td>72606</td>\n","      <td>48713</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>608691</th>\n","      <td>608692</td>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2016.0</td>\n","      <td>35.0</td>\n","      <td>33.0</td>\n","      <td>...</td>\n","      <td>114.0</td>\n","      <td>NaN</td>\n","      <td>34.0</td>\n","      <td>24.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>658</td>\n","      <td>658</td>\n","    </tr>\n","    <tr>\n","      <th>608692</th>\n","      <td>608693</td>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2018.0</td>\n","      <td>75.0</td>\n","      <td>74.0</td>\n","      <td>...</td>\n","      <td>123.0</td>\n","      <td>65.0</td>\n","      <td>32.0</td>\n","      <td>30.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4500</td>\n","      <td>4077</td>\n","    </tr>\n","    <tr>\n","      <th>608693</th>\n","      <td>608694</td>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2018.0</td>\n","      <td>59.0</td>\n","      <td>57.0</td>\n","      <td>...</td>\n","      <td>376.0</td>\n","      <td>63.0</td>\n","      <td>39.0</td>\n","      <td>38.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.0</td>\n","      <td>154.0</td>\n","      <td>9883</td>\n","      <td>5795</td>\n","    </tr>\n","    <tr>\n","      <th>608694</th>\n","      <td>608695</td>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2019.0</td>\n","      <td>40.0</td>\n","      <td>40.0</td>\n","      <td>...</td>\n","      <td>79.0</td>\n","      <td>40.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1919</td>\n","      <td>1335</td>\n","    </tr>\n","    <tr>\n","      <th>608695</th>\n","      <td>608696</td>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>7</td>\n","      <td>C</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>2015.0</td>\n","      <td>18.0</td>\n","      <td>17.0</td>\n","      <td>...</td>\n","      <td>6.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>351.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1830</td>\n","      <td>1769</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>608696 rows × 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15d31430-3f18-4e35-85d0-aa702d61111d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e79a7faf-8f04-4c53-a5c5-9031bc851f1a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e79a7faf-8f04-4c53-a5c5-9031bc851f1a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e79a7faf-8f04-4c53-a5c5-9031bc851f1a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-15d31430-3f18-4e35-85d0-aa702d61111d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-15d31430-3f18-4e35-85d0-aa702d61111d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["### data 명세\n","\n","- Product function : Y = A * L^alpha * K^beta * E^(1-alpha-beta)\n","- Labor : pay1 + pay3\n","- Kapital : (fasset_b + fasset_e) / 2  \n","- Eenergy : cost_fuel + cost_elec\n","- Y(productivity) : L * K * B"],"metadata":{"id":"iBTMW_iXKeOV"}},{"cell_type":"code","source":["city_data_mo = city_data[['year','c_city','pay1','pay3','fasset_b','fasset_e','cost_fuel','cost_elec']]\n","city_data_mo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"qXT99_4OKd16","executionInfo":{"status":"ok","timestamp":1691315843110,"user_tz":-540,"elapsed":7,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"5caed5b8-aaa2-4c2e-8656-a24311ba37cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        year c_city    pay1   pay3  fasset_b  fasset_e  cost_fuel  cost_elec\n","0       1999     서울   748.0  142.0    2253.0    2214.0       12.0       30.0\n","1       1999     서울   782.0  101.0   58722.0   58713.0       14.0       65.0\n","2       1999     서울   462.0   35.0     306.0     295.0        0.0       35.0\n","3       1999     서울   451.0   15.0     199.0     137.0       38.0       22.0\n","4       1999     서울  2620.0  450.0   35556.0   34573.0      170.0      227.0\n","...      ...    ...     ...    ...       ...       ...        ...        ...\n","608691  2019     울산   714.0  114.0      34.0      24.0        NaN        NaN\n","608692  2019     울산  3037.0  123.0      32.0      30.0        NaN        8.0\n","608693  2019     울산  3321.0  376.0      39.0      38.0        0.0        0.0\n","608694  2019     울산   655.0   79.0       0.0       0.0        3.0        3.0\n","608695  2019     울산   764.0    6.0       NaN     351.0        NaN        6.0\n","\n","[608696 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-9cd201b1-54bf-495f-874f-bf0720f21a9b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>pay1</th>\n","      <th>pay3</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>cost_fuel</th>\n","      <th>cost_elec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>748.0</td>\n","      <td>142.0</td>\n","      <td>2253.0</td>\n","      <td>2214.0</td>\n","      <td>12.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>782.0</td>\n","      <td>101.0</td>\n","      <td>58722.0</td>\n","      <td>58713.0</td>\n","      <td>14.0</td>\n","      <td>65.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>462.0</td>\n","      <td>35.0</td>\n","      <td>306.0</td>\n","      <td>295.0</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>451.0</td>\n","      <td>15.0</td>\n","      <td>199.0</td>\n","      <td>137.0</td>\n","      <td>38.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1999</td>\n","      <td>서울</td>\n","      <td>2620.0</td>\n","      <td>450.0</td>\n","      <td>35556.0</td>\n","      <td>34573.0</td>\n","      <td>170.0</td>\n","      <td>227.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>608691</th>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>714.0</td>\n","      <td>114.0</td>\n","      <td>34.0</td>\n","      <td>24.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>608692</th>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>3037.0</td>\n","      <td>123.0</td>\n","      <td>32.0</td>\n","      <td>30.0</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>608693</th>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>3321.0</td>\n","      <td>376.0</td>\n","      <td>39.0</td>\n","      <td>38.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>608694</th>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>655.0</td>\n","      <td>79.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>608695</th>\n","      <td>2019</td>\n","      <td>울산</td>\n","      <td>764.0</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","      <td>351.0</td>\n","      <td>NaN</td>\n","      <td>6.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>608696 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cd201b1-54bf-495f-874f-bf0720f21a9b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c2ecdf5c-d486-47d5-8ebb-1595f9cb59a5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2ecdf5c-d486-47d5-8ebb-1595f9cb59a5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c2ecdf5c-d486-47d5-8ebb-1595f9cb59a5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9cd201b1-54bf-495f-874f-bf0720f21a9b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9cd201b1-54bf-495f-874f-bf0720f21a9b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["city_data_mo.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FpEYVG53GeNy","executionInfo":{"status":"ok","timestamp":1691315843467,"user_tz":-540,"elapsed":3,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"c2adfb6f-5726-4c77-f4f1-8a81a21d358f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 608696 entries, 0 to 608695\n","Data columns (total 8 columns):\n"," #   Column     Non-Null Count   Dtype  \n","---  ------     --------------   -----  \n"," 0   year       608696 non-null  int64  \n"," 1   c_city     608696 non-null  object \n"," 2   pay1       608464 non-null  float64\n"," 3   pay3       608253 non-null  float64\n"," 4   fasset_b   605838 non-null  float64\n"," 5   fasset_e   607384 non-null  float64\n"," 6   cost_fuel  587910 non-null  float64\n"," 7   cost_elec  603796 non-null  float64\n","dtypes: float64(6), int64(1), object(1)\n","memory usage: 37.2+ MB\n"]}]},{"cell_type":"markdown","source":["### Data Preprocessing"],"metadata":{"id":"stEjqlmfHe-c"}},{"cell_type":"markdown","source":["- 결측치 제거"],"metadata":{"id":"3xuuRAYjRQ1o"}},{"cell_type":"code","source":["# 결측치가 있는 행 제거\n","city_data_mo = city_data_mo.dropna()\n","# 결측치 확인\n","city_data_mo.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aLvRUz37H45_","executionInfo":{"status":"ok","timestamp":1691315844378,"user_tz":-540,"elapsed":623,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"c7fa3f5e-0eb2-430f-df9c-883880dd74b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["year         0\n","c_city       0\n","pay1         0\n","pay3         0\n","fasset_b     0\n","fasset_e     0\n","cost_fuel    0\n","cost_elec    0\n","dtype: int64"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["- 이상치 제거"],"metadata":{"id":"yQAiWRC2RSR2"}},{"cell_type":"code","source":["def remove_outliers(df, column, threshold=1.5):\n","    Q1 = df[column].quantile(0.25)\n","    Q3 = df[column].quantile(0.75)\n","    IQR = Q3 - Q1\n","    lower_bound = Q1 - threshold * IQR\n","    upper_bound = Q3 + threshold * IQR\n","    return df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]\n","\n","city_data_mo = remove_outliers(city_data_mo, 'pay1')\n","city_data_mo = remove_outliers(city_data_mo, 'pay3')\n","city_data_mo = remove_outliers(city_data_mo, 'fasset_b')\n","city_data_mo = remove_outliers(city_data_mo, 'fasset_e')\n","city_data_mo = remove_outliers(city_data_mo, 'cost_fuel')\n","city_data_mo = remove_outliers(city_data_mo, 'cost_elec')"],"metadata":{"id":"Mb-cpwmoRTMo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["city_data_mo.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":344},"id":"o5EeLqpyRyxx","executionInfo":{"status":"ok","timestamp":1691315845414,"user_tz":-540,"elapsed":370,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"1026ea73-5adb-49c1-bc88-4ba699bc36ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                year           pay1           pay3       fasset_b  \\\n","count  318895.000000  318895.000000  318895.000000  318895.000000   \n","mean     2004.148754     147.247972      13.298760     119.954778   \n","std         4.326339     144.173288      16.406349     164.082821   \n","min      1999.000000       0.000000       0.000000       0.000000   \n","25%      2001.000000      55.000000       2.000000      18.000000   \n","50%      2003.000000      95.000000       7.000000      50.000000   \n","75%      2006.000000     185.000000      18.000000     147.000000   \n","max      2019.000000    1053.000000      89.000000    1190.000000   \n","\n","            fasset_e      cost_fuel      cost_elec  \n","count  318895.000000  318895.000000  318895.000000  \n","mean      120.122771       0.774133       3.879246  \n","std       155.913647       1.150717       3.619977  \n","min         0.000000       0.000000       0.000000  \n","25%        20.000000       0.000000       1.000000  \n","50%        51.000000       0.000000       3.000000  \n","75%       150.000000       1.000000       5.000000  \n","max       701.000000       5.000000      16.000000  "],"text/html":["\n","\n","  <div id=\"df-f7c30878-5ff7-42a8-b12b-6f55e643f52b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>pay1</th>\n","      <th>pay3</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>cost_fuel</th>\n","      <th>cost_elec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","      <td>318895.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2004.148754</td>\n","      <td>147.247972</td>\n","      <td>13.298760</td>\n","      <td>119.954778</td>\n","      <td>120.122771</td>\n","      <td>0.774133</td>\n","      <td>3.879246</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.326339</td>\n","      <td>144.173288</td>\n","      <td>16.406349</td>\n","      <td>164.082821</td>\n","      <td>155.913647</td>\n","      <td>1.150717</td>\n","      <td>3.619977</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1999.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2001.000000</td>\n","      <td>55.000000</td>\n","      <td>2.000000</td>\n","      <td>18.000000</td>\n","      <td>20.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2003.000000</td>\n","      <td>95.000000</td>\n","      <td>7.000000</td>\n","      <td>50.000000</td>\n","      <td>51.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.000000</td>\n","      <td>185.000000</td>\n","      <td>18.000000</td>\n","      <td>147.000000</td>\n","      <td>150.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2019.000000</td>\n","      <td>1053.000000</td>\n","      <td>89.000000</td>\n","      <td>1190.000000</td>\n","      <td>701.000000</td>\n","      <td>5.000000</td>\n","      <td>16.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7c30878-5ff7-42a8-b12b-6f55e643f52b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7145084d-4f10-49de-9bd4-d6f2485760ea\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7145084d-4f10-49de-9bd4-d6f2485760ea')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7145084d-4f10-49de-9bd4-d6f2485760ea button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7c30878-5ff7-42a8-b12b-6f55e643f52b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7c30878-5ff7-42a8-b12b-6f55e643f52b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["- 2017년 data"],"metadata":{"id":"gWiUX-ZFDcru"}},{"cell_type":"code","source":["city_data_2017 = city_data_mo[city_data_mo['year'] == 2017]\n","city_data_2017"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"3s1AOM6XDuZ4","executionInfo":{"status":"ok","timestamp":1691315846966,"user_tz":-540,"elapsed":4,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"87b98644-1b51-4b79-a2bf-abea8fa17040"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        year c_city    pay1  pay3  fasset_b  fasset_e  cost_fuel  cost_elec\n","548912  2017     서울   518.0  19.0     101.0     167.0        0.0        4.0\n","548918  2017     서울   228.0  25.0     460.0     455.0        1.0        0.0\n","548926  2017     서울   492.0  17.0      71.0      46.0        1.0        1.0\n","548930  2017     서울   312.0  31.0      18.0      16.0        2.0        2.0\n","548938  2017     서울   455.0  32.0      28.0      26.0        1.0        4.0\n","...      ...    ...     ...   ...       ...       ...        ...        ...\n","568809  2017     울산  1032.0  65.0      45.0      42.0        2.0        1.0\n","568852  2017     울산   592.0  34.0     121.0      76.0        0.0        0.0\n","568856  2017     울산   427.0  65.0       5.0       5.0        0.0        7.0\n","568860  2017     울산   364.0  25.0       3.0      59.0        1.0        3.0\n","568868  2017     울산   547.0  67.0      10.0       6.0        1.0        1.0\n","\n","[3126 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-c8154af0-1673-4edf-bd76-bad3b4de8d5c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>pay1</th>\n","      <th>pay3</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>cost_fuel</th>\n","      <th>cost_elec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>548912</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>518.0</td>\n","      <td>19.0</td>\n","      <td>101.0</td>\n","      <td>167.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>548918</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>228.0</td>\n","      <td>25.0</td>\n","      <td>460.0</td>\n","      <td>455.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>548926</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>492.0</td>\n","      <td>17.0</td>\n","      <td>71.0</td>\n","      <td>46.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>548930</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>312.0</td>\n","      <td>31.0</td>\n","      <td>18.0</td>\n","      <td>16.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>548938</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>455.0</td>\n","      <td>32.0</td>\n","      <td>28.0</td>\n","      <td>26.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>568809</th>\n","      <td>2017</td>\n","      <td>울산</td>\n","      <td>1032.0</td>\n","      <td>65.0</td>\n","      <td>45.0</td>\n","      <td>42.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>568852</th>\n","      <td>2017</td>\n","      <td>울산</td>\n","      <td>592.0</td>\n","      <td>34.0</td>\n","      <td>121.0</td>\n","      <td>76.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>568856</th>\n","      <td>2017</td>\n","      <td>울산</td>\n","      <td>427.0</td>\n","      <td>65.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>568860</th>\n","      <td>2017</td>\n","      <td>울산</td>\n","      <td>364.0</td>\n","      <td>25.0</td>\n","      <td>3.0</td>\n","      <td>59.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>568868</th>\n","      <td>2017</td>\n","      <td>울산</td>\n","      <td>547.0</td>\n","      <td>67.0</td>\n","      <td>10.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3126 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8154af0-1673-4edf-bd76-bad3b4de8d5c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cbdbefae-4fd7-47c0-9bb1-834976e7fd05\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbdbefae-4fd7-47c0-9bb1-834976e7fd05')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cbdbefae-4fd7-47c0-9bb1-834976e7fd05 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c8154af0-1673-4edf-bd76-bad3b4de8d5c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c8154af0-1673-4edf-bd76-bad3b4de8d5c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["- 서울 data"],"metadata":{"id":"aT62-iFgM1rm"}},{"cell_type":"code","source":["city_data_2017_seoul = city_data_2017[city_data_2017['c_city'] == '서울']\n","city_data_2017_seoul"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"DI9U-99nM1QF","executionInfo":{"status":"ok","timestamp":1691315847294,"user_tz":-540,"elapsed":5,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"c29eb618-44b4-4e4d-81c8-83f0657933ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        year c_city   pay1  pay3  fasset_b  fasset_e  cost_fuel  cost_elec\n","548912  2017     서울  518.0  19.0     101.0     167.0        0.0        4.0\n","548918  2017     서울  228.0  25.0     460.0     455.0        1.0        0.0\n","548926  2017     서울  492.0  17.0      71.0      46.0        1.0        1.0\n","548930  2017     서울  312.0  31.0      18.0      16.0        2.0        2.0\n","548938  2017     서울  455.0  32.0      28.0      26.0        1.0        4.0\n","...      ...    ...    ...   ...       ...       ...        ...        ...\n","553095  2017     서울  624.0  48.0       4.0      47.0        2.0        4.0\n","553097  2017     서울  575.0  45.0     202.0     124.0        2.0       14.0\n","553102  2017     서울  207.0  27.0      75.0     399.0        1.0        1.0\n","553106  2017     서울  460.0  77.0      34.0     149.0        1.0        3.0\n","553108  2017     서울  602.0   9.0      31.0      31.0        1.0        1.0\n","\n","[1414 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-113b0914-7b4f-4067-b3fa-ac90c817837c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>c_city</th>\n","      <th>pay1</th>\n","      <th>pay3</th>\n","      <th>fasset_b</th>\n","      <th>fasset_e</th>\n","      <th>cost_fuel</th>\n","      <th>cost_elec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>548912</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>518.0</td>\n","      <td>19.0</td>\n","      <td>101.0</td>\n","      <td>167.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>548918</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>228.0</td>\n","      <td>25.0</td>\n","      <td>460.0</td>\n","      <td>455.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>548926</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>492.0</td>\n","      <td>17.0</td>\n","      <td>71.0</td>\n","      <td>46.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>548930</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>312.0</td>\n","      <td>31.0</td>\n","      <td>18.0</td>\n","      <td>16.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>548938</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>455.0</td>\n","      <td>32.0</td>\n","      <td>28.0</td>\n","      <td>26.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>553095</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>624.0</td>\n","      <td>48.0</td>\n","      <td>4.0</td>\n","      <td>47.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>553097</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>575.0</td>\n","      <td>45.0</td>\n","      <td>202.0</td>\n","      <td>124.0</td>\n","      <td>2.0</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>553102</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>207.0</td>\n","      <td>27.0</td>\n","      <td>75.0</td>\n","      <td>399.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>553106</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>460.0</td>\n","      <td>77.0</td>\n","      <td>34.0</td>\n","      <td>149.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>553108</th>\n","      <td>2017</td>\n","      <td>서울</td>\n","      <td>602.0</td>\n","      <td>9.0</td>\n","      <td>31.0</td>\n","      <td>31.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1414 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-113b0914-7b4f-4067-b3fa-ac90c817837c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-73fcabd6-f798-44f4-b9de-0bea0fdc013a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73fcabd6-f798-44f4-b9de-0bea0fdc013a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-73fcabd6-f798-44f4-b9de-0bea0fdc013a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-113b0914-7b4f-4067-b3fa-ac90c817837c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-113b0914-7b4f-4067-b3fa-ac90c817837c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["city_data_2017_seoul['Labor'] = city_data_2017_seoul['pay1'] + city_data_2017_seoul['pay3']\n","city_data_2017_seoul['Kapital'] = (city_data_2017_seoul['fasset_b'] + city_data_2017_seoul['fasset_b']) / 2\n","city_data_2017_seoul['Energy'] = city_data_2017_seoul['cost_fuel'] + city_data_2017_seoul['cost_elec']\n","city_data_2017_seoul['productivity'] = city_data_2017_seoul['Labor'] * city_data_2017_seoul['Kapital'] * city_data_2017_seoul['Energy']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xbmJp_BCFCfk","executionInfo":{"status":"ok","timestamp":1691315848015,"user_tz":-540,"elapsed":2,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"32324e47-749d-4665-aa18-5d201836a399"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-100-d4b1d3e11e63>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  city_data_2017_seoul['Labor'] = city_data_2017_seoul['pay1'] + city_data_2017_seoul['pay3']\n","<ipython-input-100-d4b1d3e11e63>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  city_data_2017_seoul['Kapital'] = (city_data_2017_seoul['fasset_b'] + city_data_2017_seoul['fasset_b']) / 2\n","<ipython-input-100-d4b1d3e11e63>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  city_data_2017_seoul['Energy'] = city_data_2017_seoul['cost_fuel'] + city_data_2017_seoul['cost_elec']\n","<ipython-input-100-d4b1d3e11e63>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  city_data_2017_seoul['productivity'] = city_data_2017_seoul['Labor'] * city_data_2017_seoul['Kapital'] * city_data_2017_seoul['Energy']\n"]}]},{"cell_type":"markdown","source":["### regression modeling"],"metadata":{"id":"lu2PtvwdIuc9"}},{"cell_type":"code","source":["model = smf.ols(formula = \"productivity ~ Labor + Kapital + Energy\", data = city_data_2017_seoul)\n","res = model.fit(cov_type='HC3')\n","print(res.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qQox_o6uHswy","executionInfo":{"status":"ok","timestamp":1691315849132,"user_tz":-540,"elapsed":3,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"e6265d8d-c776-43a1-96b6-52605f472cba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:           productivity   R-squared:                       0.528\n","Model:                            OLS   Adj. R-squared:                  0.527\n","Method:                 Least Squares   F-statistic:                     71.94\n","Date:                Sun, 06 Aug 2023   Prob (F-statistic):           2.71e-43\n","Time:                        09:57:28   Log-Likelihood:                -20480.\n","No. Observations:                1414   AIC:                         4.097e+04\n","Df Residuals:                    1410   BIC:                         4.099e+04\n","Df Model:                           3                                         \n","Covariance Type:                  HC3                                         \n","==============================================================================\n","                 coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept  -5.638e+05   4.84e+04    -11.642      0.000   -6.59e+05   -4.69e+05\n","Labor        713.7145     76.683      9.307      0.000     563.419     864.010\n","Kapital     2322.6462    234.253      9.915      0.000    1863.520    2781.773\n","Energy      5.802e+04   4388.312     13.222      0.000    4.94e+04    6.66e+04\n","==============================================================================\n","Omnibus:                     1159.827   Durbin-Watson:                   1.996\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):            49675.411\n","Skew:                           3.497   Prob(JB):                         0.00\n","Kurtosis:                      31.182   Cond. No.                         922.\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors are heteroscedasticity robust (HC3)\n"]}]},{"cell_type":"code","source":["# 회귀선 및 잔차 계산\n","predicted_values = res.predict()\n","residuals = res.resid\n","\n","# 회귀선 시각화\n","plt.figure(figsize=(10, 6))\n","plt.scatter(city_data_2017_seoul['Labor'], city_data_2017_seoul['productivity'], label='Data')\n","plt.plot(city_data_2017_seoul['Labor'], predicted_values, color='red', label='Regression Line')\n","plt.xlabel('Labor')\n","plt.ylabel('Productivity')\n","plt.title('Regression Line and Residuals')\n","plt.legend()\n","plt.show()\n","\n","# 잔차 시각화\n","plt.figure(figsize=(10, 6))\n","plt.scatter(predicted_values, residuals)\n","plt.axhline(y=0, color='red', linestyle='--', label='Residuals Mean')\n","plt.xlabel('Predicted Values')\n","plt.ylabel('Residuals')\n","plt.title('Residuals vs. Predicted Values')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Qxo5orA7Ip8G","executionInfo":{"status":"ok","timestamp":1691315920318,"user_tz":-540,"elapsed":1589,"user":{"displayName":"gayeon jung","userId":"11182768220803788461"}},"outputId":"5c5e5b3b-8745-4fc7-9058-e5fe7d6204ee"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0EAAAIjCAYAAADFthA8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAD0LUlEQVR4nOzdd3iTVRsG8DtNJ6UtFAotUKBsyt57iwxBUARB+FiCbEVAFBVZIqAgCCqIyEZRkY3sISp77112odDSBXQl5/vjMU3Tpm1a2qZt7t915YK8efPmZPY87znPczRKKQUiIiIiIiIbYWftBhAREREREWUlBkFERERERGRTGAQREREREZFNYRBEREREREQ2hUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREudjEiROh0Wis3YxkNW/eHM2bN7d2MzJV3759UbJkSWs3I1klS5ZE3759U91v6dKl0Gg0uHnzZqa15ebNm9BoNFi6dGmmPQYREcAgiIhyKUOHzXCxt7dH0aJF0bdvX9y7d8/azbMJGo0Gw4cPt3YzcozmzZubfGZdXFxQtWpVzJkzB3q93trNIyLKVeyt3QAiosw0efJk+Pn5ISoqCocOHcLSpUvxzz//4Ny5c3B2drZ28zLdp59+io8++sjazUjWjh07rN2EbKVYsWKYNm0aAODx48f4+eef8f777+PRo0eYOnVqpjzm5cuXYWfHc6JEZFsYBBFRrtauXTvUrl0bADBgwAAULFgQM2bMwMaNG9GtW7csa4dSClFRUXBxccmyxwQAe3t72Ntn3596R0dHazchW/Hw8ECvXr3irw8ePBgVKlTAvHnzMHnyZGi12gx/TCcnpww/JhFRdsdTP0RkU5o0aQIAuH79usn2S5cu4Y033oCnpyecnZ1Ru3ZtbNy4Mcn9z5w5g2bNmsHFxQXFihXD559/jiVLliTJlShZsiQ6dOiA7du3o3bt2nBxccEPP/wAAAgNDcXIkSPh6+sLJycnlClTBjNmzEgy5Wn16tWoVasW3Nzc4O7ujipVquCbb76Jvz02NhaTJk1C2bJl4ezsjAIFCqBx48bYuXNn/D7mcoLi4uIwZcoUlC5dGk5OTihZsiQ+/vhjREdHm+xneA7//PMP6tatC2dnZ5QqVQrLly9PwyuessQ5Qfv27YNGo8Fvv/2GqVOnolixYnB2dkarVq1w7dq1JPc/fPgw2rZtCw8PD+TJkwfNmjXDv//+m+rjxsTE4LPPPkOtWrXg4eEBV1dXNGnSBHv37jXZz5CjMnPmTCxcuDD+NatTpw6OHj2a5Ljr169H5cqV4ezsjMqVK2PdunVpf1EScHZ2Rp06dRAREYGgoCCT21auXIlatWrBxcUFnp6e6N69O+7cuWOyz9WrV9GlSxd4e3vD2dkZxYoVQ/fu3REWFha/j7mcoPPnz6Nly5Ymn3NzU/I0Gg0mTpyYZHviY4aEhGDMmDGoUqUK8ubNC3d3d7Rr1w6nT59O9TV48OAB+vXrh2LFisHJyQk+Pj7o1KlTpuYmEVHul31PDxIRZQJDxyl//vzx286fP49GjRqhaNGi+Oijj+Dq6orffvsNnTt3xh9//IHXXnsNAHDv3j20aNECGo0G48aNg6urKxYtWpTsmfTLly+jR48eGDRoEAYOHIjy5cvj2bNnaNasGe7du4dBgwahePHiOHDgAMaNG4fAwEDMmTMHALBz50706NEDrVq1wowZMwAAFy9exL///ov33nsPgAQ406ZNw4ABA1C3bl2Eh4fj2LFjOHHiBFq3bp3sazBgwAAsW7YMb7zxBkaPHo3Dhw9j2rRpuHjxYpJO+7Vr1/DGG2/g7bffRp8+fbB48WL07dsXtWrVQqVKldL1Hlhi+vTpsLOzw5gxYxAWFoYvv/wSPXv2xOHDh+P32bNnD9q1a4datWphwoQJsLOzw5IlS9CyZUv8/fffqFu3brLHDw8Px6JFi9CjRw8MHDgQERER+Omnn9CmTRscOXIE1atXN9n/559/RkREBAYNGgSNRoMvv/wSr7/+Om7cuAEHBwcAMrWvS5cu8Pf3x7Rp0xAcHBzfeX8RhkAsX7588dumTp2K8ePHo1u3bhgwYAAePXqEefPmoWnTpjh58iTy5cuHmJgYtGnTBtHR0RgxYgS8vb1x7949bN68GaGhofDw8DD7eA8ePECLFi0QFxcX/31YuHDhC41i3rhxA+vXr0fXrl3h5+eHhw8f4ocffkCzZs1w4cIFFClSJNn7dunSBefPn8eIESNQsmRJBAUFYefOnbh9+3a2LjhBRNmcIiLKhZYsWaIAqF27dqlHjx6pO3fuqDVr1igvLy/l5OSk7ty5E79vq1atVJUqVVRUVFT8Nr1erxo2bKjKli0bv23EiBFKo9GokydPxm8LDg5Wnp6eCoAKCAiI316iRAkFQG3bts2kXVOmTFGurq7qypUrJts/+ugjpdVq1e3bt5VSSr333nvK3d1dxcXFJfscq1Wrpl555ZUUX4cJEyaohD/1p06dUgDUgAEDTPYbM2aMAqD27NmT5Dns378/fltQUJBycnJSo0ePTvFxlVIKgBo2bFiK+zRr1kw1a9Ys/vrevXsVAFWxYkUVHR0dv/2bb75RANTZs2eVUvL+lC1bVrVp00bp9fr4/Z49e6b8/PxU69atU3zcuLg4k+MrpdSTJ09U4cKFVf/+/eO3BQQEKACqQIECKiQkJH77hg0bFAC1adOm+G3Vq1dXPj4+KjQ0NH7bjh07FABVokSJFNtjeC0qVKigHj16pB49eqQuXbqkPvjgAwXA5H2+efOm0mq1aurUqSb3P3v2rLK3t4/ffvLkSQVA/f777yk+bokSJVSfPn3ir48cOVIBUIcPH47fFhQUpDw8PJJ8zgGoCRMmpHrMqKgopdPpTPYJCAhQTk5OavLkySbbAKglS5YopeQ9AaC++uqrFJ8DEVFacTocEeVqL730Ery8vODr64s33ngDrq6u2LhxY/zZ+ZCQEOzZswfdunVDREQEHj9+jMePHyM4OBht2rTB1atX46vJbdu2DQ0aNDAZJfD09ETPnj3NPrafnx/atGljsu33339HkyZNkD9//vjHevz4MV566SXodDrs378fAJAvXz48ffrUZGpbYvny5cP58+dx9epVi1+PP//8EwAwatQok+2jR48GAGzZssVku7+/f/wUQgDw8vJC+fLlcePGDYsfMz369etnki9kaIPhcU+dOoWrV6/irbfeQnBwcPzr+PTpU7Rq1Qr79+9PsaKaVquNP75er0dISAji4uJQu3ZtnDhxIsn+b775psnoYeL2BAYG4tSpU+jTp4/JCEvr1q3h7+9v8fO+dOkSvLy84OXlhQoVKuCrr77Cq6++alIyeu3atdDr9ejWrZvJZ8jb2xtly5aNn9JnaMf27dvx7Nkzi9vw559/on79+iYjaV5eXsl+zi3h5OQUX3xBp9MhODgYefPmRfny5c2+3gYuLi5wdHTEvn378OTJk3Q/PhFRYrkmCNq/fz86duyIIkWKQKPRYP369Wk+hlIKM2fORLly5eDk5ISiRYtmWjUeIsoa3333HXbu3Ik1a9agffv2ePz4scn0tWvXrkEphfHjx8d3Pg2XCRMmAEB8LsatW7dQpkyZJI9hbhsgQVBiV69exbZt25I81ksvvWTyWEOHDkW5cuXQrl07FCtWDP3798e2bdtMjjV58mSEhoaiXLlyqFKlCj744AOcOXMmxdfj1q1bsLOzS9Jmb29v5MuXD7du3TLZXrx48STHyJ8/f6Z3SBM/riEAMTyuIfDr06dPktdy0aJFiI6ONsl7MWfZsmWoWrVqfD6Vl5cXtmzZYvZ+qbXH8LqVLVs2yX3Lly+f6vM1KFmyJHbu3Int27fj+++/R9GiRfHo0SOTSoZXr16FUgply5ZN8twvXrwY/xny8/PDqFGjsGjRIhQsWBBt2rTBd999l+rrcuvWrRd+Honp9XrMnj0bZcuWhZOTEwoWLAgvLy+cOXMmxfY4OTlhxowZ2Lp1KwoXLoymTZviyy+/xIMHD9LdFiIiIBflBD19+hTVqlVD//798frrr6frGO+99x527NiBmTNnokqVKggJCUFISEgGt5SIslLdunXjq8N17twZjRs3xltvvYXLly8jb9688aMFY8aMSTJqY5BckJMaczkUer0erVu3xtixY83ep1y5cgCAQoUK4dSpU9i+fTu2bt2KrVu3YsmSJejduzeWLVsGAGjatCmuX7+ODRs2YMeOHVi0aBFmz56NBQsWYMCAASm2zdIFVJOrRqaUsuj+6ZXa4xret6+++ipJ/o5B3rx5kz3+ypUr0bdvX3Tu3BkffPABChUqBK1Wi2nTpiUpmmFJezKKq6trfEAMAI0aNULNmjXx8ccfY+7cuQDkuWs0GmzdutVsuxI+71mzZqFv377xn5F3330X06ZNw6FDh144VyklOp3O5PoXX3yB8ePHo3///pgyZQo8PT1hZ2eHkSNHproG0siRI9GxY0esX78e27dvx/jx4zFt2jTs2bMHNWrUyLTnQES5W64Jgtq1a4d27dole3t0dDQ++eQT/PLLLwgNDUXlypUxY8aM+KpEFy9exPz583Hu3Ln4s13mzuISUc5l6OS2aNEC3377LT766COUKlUKAODg4GDS+TSnRIkSZiuUmduWnNKlSyMyMjLVxwKkfHTHjh3RsWNH6PV6DB06FD/88APGjx8fH5h5enqiX79+6NevHyIjI9G0aVNMnDgx2SCoRIkS0Ov1uHr1KipWrBi//eHDhwgNDUWJEiUsfi7WVLp0aQCAu7u7Ra9lYmvWrEGpUqWwdu1ak4DQMPqXVobXzdzUxMuXL6frmABQtWpV9OrVCz/88APGjBmD4sWLo3Tp0lBKwc/PLz5oTkmVKlVQpUoVfPrppzhw4AAaNWqEBQsW4PPPP0/2uVj6PPLnz4/Q0FCTbTExMQgMDDTZtmbNGrRo0QI//fSTyfbQ0FAULFgw1edQunRpjB49GqNHj8bVq1dRvXp1zJo1CytXrkz1vkRE5uSa6XCpGT58OA4ePIjVq1fjzJkz6Nq1K9q2bRv/Q79p0yaUKlUKmzdvhp+fH0qWLIkBAwZwJIgol2nevDnq1q2LOXPmICoqCoUKFULz5s3xww8/JOm4AcCjR4/i/9+mTRscPHgQp06dit8WEhKCVatWWfz43bp1w8GDB7F9+/Ykt4WGhiIuLg4AEBwcbHKbnZ0dqlatCgDxpawT75M3b16UKVMmSanrhNq3bw8A8VXoDL7++msAwCuvvGLxc7GmWrVqoXTp0pg5cyYiIyOT3J7wfTPHMIKScCTn8OHDOHjwYLra4+Pjg+rVq2PZsmUm07t27tyJCxcupOuYBmPHjkVsbGz8e/T6669Dq9Vi0qRJSUailFLxn4vw8PD4z5NBlSpVYGdnl+pn5NChQzhy5Ej8tkePHpn9nJcuXTo+j81g4cKFSUaCtFptkrb+/vvv8fl2yXn27BmioqKSPKabm1uKz4GIKDW5ZiQoJbdv38aSJUtw+/bt+DKcY8aMwbZt27BkyRJ88cUXuHHjBm7duoXff/8dy5cvh06nw/vvv4833ngDe/bssfIzIKKM9MEHH6Br165YunQpBg8ejO+++w6NGzdGlSpVMHDgQJQqVQoPHz7EwYMHcffu3fi1TMaOHYuVK1eidevWGDFiRHyJ7OLFiyMkJMSiKWYffPABNm7ciA4dOsSXmn769CnOnj2LNWvW4ObNmyhYsGD8SZiWLVuiWLFiuHXrFubNm4fq1avHj+D4+/ujefPmqFWrFjw9PXHs2DGsWbMGw4cPT/bxq1Wrhj59+mDhwoUIDQ1Fs2bNcOTIESxbtgydO3dGixYtMuZF/s+xY8fMjjg0b94cjRs3Tvdx7ezssGjRIrRr1w6VKlVCv379ULRoUdy7dw979+6Fu7s7Nm3alOz9O3TogLVr1+K1117DK6+8goCAACxYsAD+/v5mgypLTJs2Da+88goaN26M/v37IyQkBPPmzUOlSpXSfUxA3uf27dtj0aJFGD9+PEqXLo3PP/8c48aNw82bN9G5c2e4ubkhICAA69atwzvvvIMxY8Zgz549GD58OLp27Ypy5cohLi4OK1asgFarRZcuXZJ9vLFjx2LFihVo27Yt3nvvvfgS2SVKlEiSczZgwAAMHjwYXbp0QevWrXH69Gls3749yehOhw4dMHnyZPTr1w8NGzbE2bNnsWrVqviR2ORcuXIFrVq1Qrdu3eDv7w97e3usW7cODx8+RPfu3dP9mhIR5coS2QDUunXr4q9v3rxZAVCurq4mF3t7e9WtWzellFIDBw5UANTly5fj73f8+HEFQF26dCmrnwIRvSBDieyjR48muU2n06nSpUur0qVLx5egvn79uurdu7fy9vZWDg4OqmjRoqpDhw5qzZo1Jvc9efKkatKkiXJyclLFihVT06ZNU3PnzlUA1IMHD+L3K1GiRLLlqyMiItS4ceNUmTJllKOjoypYsKBq2LChmjlzpoqJiVFKKbVmzRr18ssvq0KFCilHR0dVvHhxNWjQIBUYGBh/nM8//1zVrVtX5cuXT7m4uKgKFSqoqVOnxh9DqaQlspVSKjY2Vk2aNEn5+fkpBwcH5evrq8aNG2dSIjyl55C4rHVyACR7mTJlitljGUpkJy7rnLh0ssHJkyfV66+/rgoUKKCcnJxUiRIlVLdu3dTu3btTbJter1dffPGFKlGihHJyclI1atRQmzdvVn369DEpZ214XHMlmmGmPPQff/yhKlasqJycnJS/v79au3ZtkmMmp1mzZqpSpUpmb9u3b1+Sx/vjjz9U48aN4/+mVahQQQ0bNiz+79iNGzdU//79VenSpZWzs7Py9PRULVq0ULt27TI5duJy1kopdebMGdWsWTPl7OysihYtqqZMmaJ++umnJCWydTqd+vDDD1XBggVVnjx5VJs2bdS1a9fMlsgePXq08vHxUS4uLqpRo0bq4MGDSd7/xO/z48eP1bBhw1SFChWUq6ur8vDwUPXq1VO//fZbqq8nEVFKNEplcnarFWg0Gqxbtw6dO3cGAPz666/o2bMnzp8/nySJNG/evPD29saECRPwxRdfIDY2Nv6258+fI0+ePNixY0eKCw8SkW0bOXIkfvjhB0RGRiabQE9ERETZh01Mh6tRowZ0Oh2CgoJM1rtIqFGjRoiLi8P169fjE26vXLkCADkmUZiIMt/z589Nqr4FBwdjxYoVaNy4MQMgIiKiHCLXjARFRkbGV2iqUaMGvv76a7Ro0QKenp4oXrw4evXqhX///RezZs1CjRo18OjRI+zevRtVq1bFK6+8Ar1ejzp16iBv3ryYM2cO9Ho9hg0bBnd3d+zYscPKz46Isovq1aujefPmqFixIh4+fIiffvoJ9+/fx+7du9G0aVNrN4+IiIgskGuCoH379plN6O3Tpw+WLl2K2NhYfP7551i+fDnu3buHggULon79+pg0aRKqVKkCALh//z5GjBiBHTt2wNXVFe3atcOsWbPg6emZ1U+HiLKpjz/+GGvWrMHdu3eh0WhQs2ZNTJgwIV1lmomIiMg6ck0QREREREREZAmbWSeIiIiIiIgIYBBEREREREQ2JkdXh9Pr9bh//z7c3NwsWqSQiIiIiIhyJ6UUIiIiUKRIEdjZpTzWk6ODoPv378PX19fazSAiIiIiomzizp07KFasWIr75OggyM3NDYA8UXd3dyu3hoiIiIiIrCU8PBy+vr7xMUJKcnQQZJgC5+7uziCIiIiIiIgsSpNhYQQiIiIiIrIpDIKIiIiIiMimMAgiIiIiIiKbkqNzgoiIiIjIepRSiIuLg06ns3ZTyAZotVrY29tnyNI4DIKIiIiIKM1iYmIQGBiIZ8+eWbspZEPy5MkDHx8fODo6vtBxGAQRERERUZro9XoEBARAq9WiSJEicHR05ML1lKmUUoiJicGjR48QEBCAsmXLprogakoYBBERERFRmsTExECv18PX1xd58uSxdnPIRri4uMDBwQG3bt1CTEwMnJ2d030sFkYgIiIionR5kTPxROmRUZ85fnKJiIiIiMimMAgiIiIiIiKbwiCIiIiIiIhsCoMgIiIiIrIZffv2hUajgUajgYODAwoXLozWrVtj8eLF0Ov1Fh9n6dKlyJcvX+Y1lDIVgyAiIiIishqdXuHg9WBsOHUPB68HQ6dXmf6Ybdu2RWBgIG7evImtW7eiRYsWeO+999ChQwfExcVl+uOT9TEIIiIiyuas0UkkygrbzgWi8Yw96PHjIby3+hR6/HgIjWfswbZzgZn6uE5OTvD29kbRokVRs2ZNfPzxx9iwYQO2bt2KpUuXAgC+/vprVKlSBa6urvD19cXQoUMRGRkJANi3bx/69euHsLCw+FGliRMnAgBWrFiB2rVrw83NDd7e3njrrbcQFBSUqc+H0o5BEBERUTZmrU4iUWbbdi4QQ1aeQGBYlMn2B2FRGLLyRJZ/xlu2bIlq1aph7dq1AKQU89y5c3H+/HksW7YMe/bswdixYwEADRs2xJw5c+Du7o7AwEAEBgZizJgxAIDY2FhMmTIFp0+fxvr163Hz5k307ds3S58LpY6LpRIREWVThk5i4nEfQydxfq+aaFvZxyptI3oROr3CpE0Xkny2AUAB0ACYtOkCWvt7Q2unybJ2VahQAWfOnAEAjBw5Mn57yZIl8fnnn2Pw4MH4/vvv4ejoCA8PD2g0Gnh7e5sco3///vH/L1WqFObOnYs6deogMjISefPmzZLnQanjSBAREVE2lFonEZBOIqfGUU50JCAkyQhQQgpAYFgUjgSEZF2jACiloNFI0LVr1y60atUKRYsWhZubG/73v/8hODgYz549S/EYx48fR8eOHVG8eHG4ubmhWbNmAIDbt29nevvJcgyCiIiIsqHs2kkkyghBEcl/ttOzX0a5ePEi/Pz8cPPmTXTo0AFVq1bFH3/8gePHj+O7774DAMTExCR7/6dPn6JNmzZwd3fHqlWrcPToUaxbty7V+1HW43Q4IiKibCi7dhKJMkIhN+cM3S8j7NmzB2fPnsX777+P48ePQ6/XY9asWbCzkzGD3377zWR/R0dH6HQ6k22XLl1CcHAwpk+fDl9fXwDAsWPHsuYJUJpwJIiIiCgbyo6dRKKMUtfPEz4ezkgu20cDwMfDGXX9PDPl8aOjo/HgwQPcu3cPJ06cwBdffIFOnTqhQ4cO6N27N8qUKYPY2FjMmzcPN27cwIoVK7BgwQKTY5QsWRKRkZHYvXs3Hj9+jGfPnqF48eJwdHSMv9/GjRsxZcqUTHkO9GIYBBEREWVD1u4kEmUmrZ0GEzr6A0CSz7jh+oSO/plWFGHbtm3w8fFByZIl0bZtW+zduxdz587Fhg0boNVqUa1aNXz99deYMWMGKleujFWrVmHatGkmx2jYsCEGDx6MN998E15eXvjyyy/h5eWFpUuX4vfff4e/vz+mT5+OmTNnZspzoBejUUrl2IzK8PBweHh4ICwsDO7u7tZuDhERUYYyVIcDYFIgwdAtZHU4spaoqCgEBATAz88Pzs7pH43cdi4QkzZdMMl/8/FwxoSO/vxsk1kpffbSEhswJ4iIiCibalvZB/N71UzSSfRmJ5FyibaVfdDa3xtHAkIQFBGFQm4yupmVZbHJNjEIIiIiysbYSaTcTmunQYPSBazdDLIxDIKIiIiyOXYSiYgyFgsjEBERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU1hEERERERERDaFQRARERERUQ538+ZNaDQanDp1yqrtKFmyJObMmWPVNliCQRARERER2Yy+fftCo9FAo9HAwcEBfn5+GDt2LKKioqzdtBfi6+uLwMBAVK5cOVMfZ+LEiahevXqytx89ehTvvPNOprYhI3CxVCIiIiKyKW3btsWSJUsQGxuL48ePo0+fPtBoNJgxY0amPaZOp4NGo4GdXeaMQWi1Wnh7e2fKsdPCy8vL2k2wCEeCiIiIiOjFKQU8fWqdi1JpaqqTkxO8vb3h6+uLzp0746WXXsLOnTvjb9fr9Zg2bRr8/Pzg4uKCatWqYc2aNSbH2LhxI8qWLQtnZ2e0aNECy5Ytg0ajQWhoKABg6dKlyJcvHzZu3Ah/f384OTnh9u3biI6OxpgxY1C0aFG4urqiXr162LdvX/xxb926hY4dOyJ//vxwdXVFpUqV8OeffwIAnjx5gp49e8LLywsuLi4oW7YslixZAsD8dLi//voLdevWhZOTE3x8fPDRRx8hLi4u/vbmzZvj3XffxdixY+Hp6Qlvb29MnDgxTa9lYomnw2k0GixatAivvfYa8uTJg7Jly2Ljxo0m9zl37hzatWuHvHnzonDhwvjf//6Hx48fv1A7UsMgiIiIiIhe3LNnQN681rk8e5buZp87dw4HDhyAo6Nj/LZp06Zh+fLlWLBgAc6fP4/3338fvXr1wl9//QUACAgIwBtvvIHOnTvj9OnTGDRoED755BMzL8kzzJgxA4sWLcL58+dRqFAhDB8+HAcPHsTq1atx5swZdO3aFW3btsXVq1cBAMOGDUN0dDT279+Ps2fPYsaMGcibNy8AYPz48bhw4QK2bt2KixcvYv78+ShYsKDZ53Xv3j20b98ederUwenTpzF//nz89NNP+Pzzz032W7ZsGVxdXXH48GF8+eWXmDx5sklAmBEmTZqEbt264cyZM2jfvj169uyJkJAQAEBoaChatmyJGjVq4NixY9i2bRsePnyIbt26ZWgbklA5WFhYmAKgwsLCrN0UIiIiIpvx/PlzdeHCBfX8+XPjxshIpWRMJusvkZEWt71Pnz5Kq9UqV1dX5eTkpAAoOzs7tWbNGqWUUlFRUSpPnjzqwIEDJvd7++23VY8ePZRSSn344YeqcuXKJrd/8sknCoB68uSJUkqpJUuWKADq1KlT8fvcunVLabVade/ePZP7tmrVSo0bN04ppVSVKlXUxIkTzba9Y8eOql+/fmZvCwgIUADUyZMnlVJKffzxx6p8+fJKr9fH7/Pdd9+pvHnzKp1Op5RSqlmzZqpx48Ymx6lTp4768MMPzT6GUkpNmDBBVatWLdnbS5QooWbPnh1/HYD69NNP469HRkYqAGrr1q1KKaWmTJmiXn75ZZNj3LlzRwFQly9fTnJ8s5+9/6QlNmBOEBERERG9uDx5gMhI6z12GrRo0QLz58/H06dPMXv2bNjb26NLly4AgGvXruHZs2do3bq1yX1iYmJQo0YNAMDly5dRp04dk9vr1q2b5HEcHR1RtWrV+Otnz56FTqdDuXLlTPaLjo5GgQIFAADvvvsuhgwZgh07duCll15Cly5d4o8xZMgQdOnSBSdOnMDLL7+Mzp07o2HDhmaf48WLF9GgQQNoNJr4bY0aNUJkZCTu3r2L4sWLA4BJ+wDAx8cHQUFBybxy6ZPwMVxdXeHu7h7/GKdPn8bevXvjR7sSun79epLXKqMwCCIiIiKiF6fRAK6u1m6FRVxdXVGmTBkAwOLFi1GtWjX89NNPePvttxH5XyC3ZcsWFC1a1OR+Tk5OaXocFxcXkyAkMjISWq0Wx48fh1arNdnXEAQMGDAAbdq0wZYtW7Bjxw5MmzYNs2bNwogRI9CuXTvcunULf/75J3bu3IlWrVph2LBhmDlzZppfAwMHBweT6xqNBnq9Pt3HS+tjREZGomPHjmaLUvj4+GRoOxJiThARERER2Sw7Ozt8/PHH+PTTT/H8+XOTIgZlypQxufj6+gIAypcvj2PHjpkc5+jRo6k+Vo0aNaDT6RAUFJTk2Akru/n6+mLw4MFYu3YtRo8ejR9//DH+Ni8vL/Tp0wcrV67EnDlzsHDhQrOPVbFiRRw8eBAqQdGIf//9F25ubihWrFiaXqPMVLNmTZw/fx4lS5ZM8pq4ZmJQbdUgqGTJkvF12hNehg0bZs1mEREREZEN6dq1K7RaLb777ju4ublhzJgxeP/997Fs2TJcv34dJ06cwLx587Bs2TIAwKBBg3Dp0iV8+OGHuHLlCn777TcsXboUAExGfhIrV64cevbsid69e2Pt2rUICAjAkSNHMG3aNGzZsgUAMHLkSGzfvh0BAQE4ceIE9u7di4oVKwIAPvvsM2zYsAHXrl3D+fPnsXnz5vjbEhs6dCju3LmDESNG4NKlS9iwYQMmTJiAUaNGvXCZ7ufPn+PUqVMml+vXr6frWMOGDUNISAh69OiBo0eP4vr169i+fTv69esHnU73Qu1MiVWDoKNHjyIwMDD+YqhE0bVrV2s2i4iIiIhsiL29PYYPH44vv/wST58+xZQpUzB+/HhMmzYNFStWRNu2bbFlyxb4+fkBAPz8/LBmzRqsXbsWVatWxfz58+Orw6U2ZW7JkiXo3bs3Ro8ejfLly6Nz5844evRofI6OTqfDsGHD4h+3XLly+P777wFIjtG4ceNQtWpVNG3aFFqtFqtXrzb7OEWLFsWff/6JI0eOoFq1ahg8eDDefvttfPrppy/8el25cgU1atQwuQwaNChdxypSpAj+/fdf6HQ6vPzyy6hSpQpGjhyJfPnyZdqaSgCgUQnHyKxs5MiR2Lx5M65evZpiFG0QHh4ODw8PhIWFwd3dPQtaSERERERRUVEICAiAn58fnJ2drd2cbGHq1KlYsGAB7ty5Y+2m5GopffbSEhtkm8IIMTExWLlyJUaNGpVsABQdHY3o6Oj46+Hh4VnVPCIiIiKieN9//z3q1KmDAgUK4N9//8VXX32F4cOHW7tZZKFsEwStX78eoaGh6Nu3b7L7TJs2DZMmTcq6RhERERERmXH16lV8/vnnCAkJQfHixTF69GiMGzfO2s0iC2Wb6XBt2rSBo6MjNm3alOw+5kaCfH19OR2OiIiIKAtxOhxZS66aDnfr1i3s2rULa9euTXE/JyenNNdnJyIiIiIiSihbrBO0ZMkSFCpUCK+88oq1m0JEREREFsomE4rIhmTUZ87qQZBer8eSJUvQp08f2Ntni4EpIiIiIkqBg4MDAODZs2dWbgnZGsNnzvAZTC+rRx27du3C7du30b9/f2s3hYiIiIgsoNVqkS9fPgQFBQEA8uTJY9HyJkTppZTCs2fPEBQUhHz58kGr1b7Q8aweBL388sscSiUiIiLKYby9vQEgPhAiygr58uWL/+y9CKsHQURERESU82g0Gvj4+KBQoUKIjY21dnPIBjg4OLzwCJABgyAiIiIiSjetVpthHVOirGL1wghERERERERZiUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU1hEERERERERDaFQRAREREREdkUBkFERERERGRTGAQREREREZFNYRBEREREREQ2hUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU1hEERERERERDaFQRAREREREdkUBkFERERERGRTGAQREREREZFNYRBEREREREQ2hUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU2xt3YDiIiIKHPp9ApHAkIQFBGFQm7OqOvnCa2dxtrNIiKyGgZBREREudi2c4GYtOkCAsOi4rf5eDhjQkd/tK3sY8WWERFZD6fDERER5VLbzgViyMoTJgEQADwIi8KQlSew7VyglVpGRGRdDIKIiIhyIZ1eYdKmC1BmbjNsm7TpAnR6c3sQEeVuDIKIiIhyoSMBIUlGgBJSAALDonAkICTrGkVElE0wCCIiIsqFgiKSD4DSsx8RUW7CwghERES5UCE35wzdj8gcVh6knMrqQdC9e/fw4YcfYuvWrXj27BnKlCmDJUuWoHbt2tZuGhERUY5V188TPh7OeBAWZTYvSAPA20M6rUTpwcqDlJNZdTrckydP0KhRIzg4OGDr1q24cOECZs2ahfz581uzWURERDme1k6DCR39AUjAk5Dh+oSO/jxrT+nCyoOU02mUUlYrC/PRRx/h33//xd9//52u+4eHh8PDwwNhYWFwd3fP4NYRERHlfDxbTxlNp1doPGNPsoU3DKOM/3zYkkE2Zam0xAZWnQ63ceNGtGnTBl27dsVff/2FokWLYujQoRg4cKDZ/aOjoxEdHR1/PTw8PKuaSkRElCO1reyD1v7ezNugDJOWyoMNShfIuoYRpYFVp8PduHED8+fPR9myZbF9+3YMGTIE7777LpYtW2Z2/2nTpsHDwyP+4uvrm8UtJiIiynm0dho0KF0AnaoXRYPSBRgA0QvZdeGBRfux8iBlZ1adDufo6IjatWvjwIED8dveffddHD16FAcPHkyyv7mRIF9fX06HIyIiIsoC284FYvDKExbt+8vA+hwJoiyVlulwVh0J8vHxgb+/v8m2ihUr4vbt22b3d3Jygru7u8mFiIiIiDKfTq8wadOFVPfTQPLOWHmQsjOrBkGNGjXC5cuXTbZduXIFJUqUsFKLiIiIiMic1HKBDBRYeZCyP6sWRnj//ffRsGFDfPHFF+jWrRuOHDmChQsXYuHChdZsFhERkUW4UCTZEktzfPo3KsnKg5TtWTUIqlOnDtatW4dx48Zh8uTJ8PPzw5w5c9CzZ09rNouIiChVLD1NtqaQm7NF+7X2987klhC9OKsWRnhRXCeIiIiswbBQZOI/oIYxoPm9ajIQolzHsD7Qg7CoJJ99gOsDkfXlmMIIREREOY0hOdxcJ9CwbdKmC9Dpc+w5RiKztHYaTOgoBa0ShziG68wFopyCQRAREVEapGWhSKLcpm1lH8zvVRPeHqZT47w9nDkCSjmKVXOCiIiIchpLk8O5UCTlVm0r+6C1vzeLglCOxiCIiIgoDSxNDrd0P6KcSGun4UKolKNxOhwREVEa1PXzhI+Hc5KcCAMuFElElP0xCCIiIkoDJocTEeV8DIKIiIjSiMnhREQ5G3OCiIiI0oHJ4UREOReDICIionRicjgRUc7E6XBERERERGRTGAQREREREZFNYRBEREREREQ2hUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU1hEERERERERDaFQRAREREREdkUBkFERERERGRTGAQREREREZFNsbd2A4iIiIiIshOdXuFIQAiCIqJQyM0Zdf08obXTWLtZlIEYBBERERER/WfbuUBM2nQBgWFR8dt8PJwxoaM/2lb2sWLLKCNxOhwRERERESQAGrLyhEkABAAPwqIwZOUJbDsXaKWWUUZjEERERERENk+nV5i06QKUmdsM2yZtugCd3twelNMwCCIiIiIim3ckICTJCFBCCkBgWBSOBIRkXaMo0zAIIiIiIiKbFxSRfACUnv0oe2NhBCIiIqJMwipjOUchN+cM3Y+yNwZBRERERJmAVcZylrp+nvDxcMaDsCizeUEaAN4eEshSzsfpcEREREQZjFXGch6tnQYTOvoDkIAnIcP1CR39OZKXSzAIIiIiIspArDKWc7Wt7IP5vWrC28N0ypu3hzPm96rJEbxchNPhiIiIiDJQWqqMNShdIOsaRhZpW9kHrf29mcuVyzEIIiIiIspArDKW82ntNAxQczlOhyMiIiLKQKwyRpT9MQgiIiIiykCGKmPJTZ7SQKrEscoYkfUwCCIiIiLKQKwyRpT9MQgiIiKiXEmnVzh4PRgbTt3DwevBWVqNjVXGiLI3FkYgIiKiXCc7LFTKKmNE2ZdGKZVji9SHh4fDw8MDYWFhcHd3t3ZziIiIKBswLFSauINjCD3SMhKj0ysGMUQ5RFpiA44EERERUa6R2kKlGshCpa39vVMNZrLDaBIRZQ6r5gRNnDgRGo3G5FKhQgVrNomIiIhysLQsVJoSw2hS4mM9CIvCkJUnsO1cYEY0l4isxOojQZUqVcKuXbvir9vbW71JRERElENlxEKlGTmaRETZk9UjDnt7e3h7e1u7GURERJQLZMRCpWkZTWpQukBam0hE2YDVS2RfvXoVRYoUQalSpdCzZ0/cvn072X2jo6MRHh5uciEiIiIyyIiFSjNiNImIsjerBkH16tXD0qVLsW3bNsyfPx8BAQFo0qQJIiIizO4/bdo0eHh4xF98fX2zuMVERJSVrLnOC+VMGbFQaUaMJhFR9patSmSHhoaiRIkS+Prrr/H2228nuT06OhrR0dHx18PDw+Hr68sS2UREuRArc9GLeJHPj06v0HjGHjwIizKbF6SBLHr6z4ctmRNElI3k2BLZ+fLlQ7ly5XDt2jWztzs5OcHJySmLW0VERFktuXVeDJW50rLOC9mmF1mo1DCaNGTlCWgAk8+hpaNJRJS9WT0nKKHIyEhcv34dPj78w0ZEZKtSq8wFSGUuTo2j1GjtNGhQugA6VS+KBqULpCloaVvZB/N71YS3h+mUN28PZwbhRLmAVUeCxowZg44dO6JEiRK4f/8+JkyYAK1Wix49elizWUREZEWszEXZxYuMJhFR9mbVIOju3bvo0aMHgoOD4eXlhcaNG+PQoUPw8vKyZrOIiMiKWJmLshPDaBIR5S5WDYJWr15tzYcnIqJsiJW5iIgos2WrnCAiIqKMWOeFiIgoJQyCiIgoW8mIdV6IiIhSwiCIiIiyHVbmIiKizJSt1gkiIiIyYGUuIiLKLAyCiIgo22JlLiIiygycDkdERERERDaFQRAREREREdkUBkFERERERGRTGAQREREREZFNYRBEREREREQ2hUEQERERERHZFAZBRERERERkUxgEERERERGRTWEQRERERERENoVBEBERERER2RQGQUREREREZFMYBBERERERkU1hEERERERERDaFQRAREREREdkUBkFERERERGRTGAQREREREZFNsbd2A4iIKO10eoUjASEIiohCITdn1PXzhNZOY+1mERER5QgMgoiIcpht5wIxadMFBIZFxW/z8XDGhI7+aFvZx4otIyIiyhk4HY6IKAfZdi4QQ1aeMAmAAOBBWBSGrDyBbecCrdQyIiKinINBEBFRDqHTK0zadAHKzG2GbZM2XYBOb24PIiIiMmAQRESUQxwJCEkyApSQAhAYFoUjASFZ1ygiomxMp1c4eD0YG07dw8HrwTxJRPGYE0RElEMERSQfAKVnPyKi3Iz5k5QSjgQREeUQhdycM3Q/IqLcivmTlBoGQUREOURdP0/4eDgjuULYGshZzrp+nlnZLCKibIX5k2QJBkFERDmE1k6DCR39ASBJIGS4PqGjP9cLIiKbxvxJsgSDICKiHKRtZR/M71UT3h6mU968PZwxv1dNznMnIpvH/EmyBAsjEBHlMG0r+6C1vzeOBIQgKCIKhdxkChxHgIiImD9JlmEQRESUA2ntNGhQuoC1m0FElO0Y8icfhEWZzQvSQEbPmT9p2zgdjoiIiIhyDeZPkiXSFQQ9ffo0o9tBRERERJQhmD9JqUnXdLjChQujW7du6N+/Pxo3bpzRbSIiIiIieiHMn6SUpGskaOXKlQgJCUHLli1Rrlw5TJ8+Hffv38/othERERERpZshf7JT9aJoULoAAyCKl64gqHPnzli/fj3u3buHwYMH4+eff0aJEiXQoUMHrF27FnFxcRndTiIiIiIiogyhUUplyHK58+bNwwcffICYmBgULFgQgwcPxkcffYQ8efJkxOHNCg8Ph4eHB8LCwuDu7p5pj0NERERERNlbWmKDFyqR/fDhQyxbtgxLly7FrVu38MYbb+Dtt9/G3bt3MWPGDBw6dAg7dux4kYcgIiIiIiLKUOkKgtauXYslS5Zg+/bt8Pf3x9ChQ9GrVy/ky5cvfp+GDRuiYsWKGdVOIiIiIiKiDJGunKB+/fqhSJEi+Pfff3Hq1CkMHz7cJAACgCJFiuCTTz6x+JjTp0+HRqPByJEj09MkIiIi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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}